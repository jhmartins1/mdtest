{"version":3,"file":"selectpreset.min.js","sources":["../src/selectpreset.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module to control the form responsible for selecting a preset.\n *\n * @module      mod_data/selectpreset\n * @copyright   2021 Mihail Geshoski <mihail@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst selectors = {\n    presetRadioButton: 'input[name=\"fullname\"]',\n    selectPresetButton: 'input[name=\"selectpreset\"]',\n    selectedPresetRadioButton: 'input[name=\"fullname\"]:checked',\n};\n\n/**\n * Initialize module.\n */\nexport const init = () => {\n    const radioButton = document.querySelectorAll(selectors.presetRadioButton);\n\n    // Initialize the \"Use preset\" button properly.\n    disableUsePresetButton();\n\n    radioButton.forEach((elem) => {\n        elem.addEventListener('change', function(event) {\n            event.preventDefault();\n            // Enable the \"Use preset\" button when any of the radio buttons in the presets list is checked.\n            disableUsePresetButton();\n        });\n    });\n\n};\n\n/**\n * Decide whether to disable or not the \"Use preset\" button.\n * When there is no preset selected, the button should be displayed disabled; otherwise, it will appear enabled as a primary button.\n *\n * @method\n * @private\n */\nconst disableUsePresetButton = () => {\n    let selectPresetButton = document.querySelector(selectors.selectPresetButton);\n    const selectedRadioButton = document.querySelectorAll(selectors.selectedPresetRadioButton);\n\n    if (selectedRadioButton.length > 0) {\n        // There is one preset selected, so the button should be enabled.\n        selectPresetButton.removeAttribute('disabled');\n        selectPresetButton.classList.remove('btn-secondary');\n        selectPresetButton.classList.add('btn-primary');\n    } else {\n        // There is no any preset selected, so the button should be disabled.\n        selectPresetButton.setAttribute('disabled', true);\n        selectPresetButton.classList.remove('btn-primary');\n        selectPresetButton.classList.add('btn-secondary');\n    }\n};\n"],"names":["selectors","radioButton","document","querySelectorAll","disableUsePresetButton","forEach","elem","addEventListener","event","preventDefault","selectPresetButton","querySelector","length","removeAttribute","classList","remove","add","setAttribute"],"mappings":";;;;;;;;MAuBMA,4BACiB,yBADjBA,6BAEkB,6BAFlBA,oCAGyB,+CAMX,WACVC,YAAcC,SAASC,iBAAiBH,6BAG9CI,yBAEAH,YAAYI,SAASC,OACjBA,KAAKC,iBAAiB,UAAU,SAASC,OACrCA,MAAMC,iBAENL,sCAaNA,uBAAyB,SACvBM,mBAAqBR,SAASS,cAAcX,8BACpBE,SAASC,iBAAiBH,qCAE9BY,OAAS,GAE7BF,mBAAmBG,gBAAgB,YACnCH,mBAAmBI,UAAUC,OAAO,iBACpCL,mBAAmBI,UAAUE,IAAI,iBAGjCN,mBAAmBO,aAAa,YAAY,GAC5CP,mBAAmBI,UAAUC,OAAO,eACpCL,mBAAmBI,UAAUE,IAAI"}